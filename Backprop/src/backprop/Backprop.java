/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package backprop;

import java.util.ArrayList;

/**
 *
 * @author Placas
 */
public class Backprop {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        
        ArrayList<float[]> entradas= new ArrayList<float[]>();
        float[] cero = new float[]
            {
                255, 255, 255, 255, 197, 139, 139, 201, 255, 255, 255, 255, 255,
                255, 255, 190,   0,   0,   0,   0,   0,   0, 177, 255, 255, 255,
                255, 147,   0,   0,   0,   0,   0,   0,   0,   0, 141, 255, 255,
                239,   0,   0,   0,  20,  53,  38,   0,   0,   0,   0, 232, 255,
                123,   0,   0,  20, 255, 255, 253, 244,  34,   0,   0, 176, 255,
                154,   0,   0, 114, 255, 255, 255, 255, 152,   0,   0,  58, 255,
                18,    0,   0, 163, 254, 255, 255, 255, 140,   0,   0,  13, 255,
                14,    0,   3, 219, 255, 255, 255, 255, 228,   0,   0,   0, 255,
                0,     0,   4, 246, 255, 255, 255, 255, 255,   0,   0,   0, 244,
                0,     0,   4, 255, 255, 255, 255, 255, 255,   0,   0,   0, 205,
                0,     0,   6, 255, 255, 255, 255, 255, 255,  81,   0,   0,  49,
                0,     0,   7, 255, 255, 255, 255, 255, 255,  59,   0,   0, 125,
                0,     0, 106, 255, 255, 255, 255, 255, 255,  55,   0,   0, 118,
                0,     0,  91, 255, 255, 255, 255, 255, 255,  56,   0,   0, 122,
                0,     0, 139, 255, 255, 255, 255, 254, 255,  82,   0,   0, 135,
                0,     0,  99, 255, 255, 255, 255, 255, 255,  64,   0,   0, 124,
                0,     0,  92, 255, 255, 255, 255, 255, 255,  56,   0,   0, 123,
                0,     0, 101, 255, 255, 255, 255, 255, 255,  56,   0,   0, 118,
                0,     0, 135, 255, 255, 255, 255, 255, 255,  56,   0,   0, 127,
                0,     0,   1, 255, 255, 255, 255, 255, 255,  87,   0,   0, 152,
                0,     0,   5, 255, 255, 255, 255, 255, 255, 119,   0,   0, 204,
                0,     0,   4, 248, 255, 255, 255, 255, 255, 125,   0,   0, 242,
                15,    0,   2, 167, 255, 255, 255, 255, 235,   0,   0,   0, 255,
                17,    0,   0, 198, 255, 255, 255, 255, 165,   0,   0,  82, 255,
                26,    0,   0,  45, 255, 255, 255, 255, 144,   0,   0,  49, 255,
                118,   0,   0,  17, 255, 255, 255, 247,  25,   0,   0, 175, 255,
                231,   0,   0,   0,   8, 152, 141,   0,   0,   0,   0, 222, 255,
                255, 144,   0,   0,   0,   0,   0,   0,   0,   0,  92, 255, 255,
                255, 255, 140,   0,   0,   0,   0,   0,   0, 130, 255, 255, 255,
                255, 255, 255, 255, 174, 135, 130, 180, 253, 255, 255, 255, 255
            };                    //0
        float[] uno = new float[]
            {
                255, 254, 255, 255, 255, 255, 242, 179, 186, 183, 183, 232, 235,
                255, 255, 254, 255, 255, 255, 152,   0,   0,  19, 169, 197, 221,
                255, 255, 255, 242, 153, 101,   9,   0,   0,   0,   0, 188, 218,
                255, 188,  71,  35,   0,   0,   0,   0,   0,   0,   0, 189, 221,
                245, 145,   0,   0,   0,   0,   0,   0,   0,   0,   0, 189, 221,
                245, 139,   0,   0,   0,   0,   0,   0,   0,   0,   0, 189, 221,
                255, 255, 230, 178, 190, 130,  32,   0,   0,   0,   0, 190, 222,
                255, 255, 255, 255, 255, 255, 159,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 160,   0,   0,   0,   0, 188, 220,
                255, 255, 255, 255, 255, 255, 157,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 156,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 160,   0,   0,   0,   0, 188, 219,
                255, 255, 255, 255, 255, 255, 160,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 158,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 160,   0,   0,   0,   0, 189, 220,
                255, 255, 255, 255, 255, 255, 160,   0,   0,   0,   0, 189, 220,
                255, 255, 255, 255, 255, 255, 158,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 157,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 156,   0,   0,   0,   0, 188, 219,
                255, 255, 255, 255, 255, 255, 160,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 157,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 160,   0,   0,   0,   0, 188, 220,
                255, 255, 255, 255, 255, 255, 160,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 163,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 159,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 158,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 160,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 160,   0,   0,   0,   0, 189, 221,
                255, 255, 255, 255, 255, 255, 161,   0,   0,   0,   0, 182, 222,
                255, 255, 255, 255, 255, 255, 237, 217, 200, 200, 213, 255, 255,
            };                    //1
        float[] dos = new float[]    
        {
                255, 255, 255, 255, 189, 117,  59,  30, 165, 255, 255, 255, 255,
                255, 255, 252, 140,   0,   0,   0,   0,   0,  34, 249, 255, 255,
                255, 255,  55,   0,   0,   0,   0,   0,   0,   0,  33, 255, 255,
                255,  98,   0,   0,   0, 137, 201, 147,  52,   0,   0, 156, 255,
                255,  13,   0,   0, 202, 255, 255, 255, 232,  22,   0,  21, 255,
                238,   0,   0,  66, 255, 255, 254, 255, 255, 145,   0,   0, 160,
                255, 131, 129, 215, 255, 255, 254, 255, 255, 186,   0,   0, 115,
                255, 255, 255, 254, 255, 255, 255, 255, 255, 205,   0,   0,  94,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 177,   0,   0, 123,
                255, 254, 255, 255, 255, 255, 255, 255, 255,  68,   0,   0, 245,
                255, 255, 255, 255, 255, 255, 255, 255, 219,   0,   0,  13, 255,
                255, 255, 255, 255, 255, 255, 255, 251, 111,   0,   0,  97, 255,
                255, 255, 255, 255, 255, 255, 240,  12,   0,   0,  23, 255, 255,
                255, 255, 254, 255, 255, 255,  16,   0,   0,  14, 201, 255, 255,
                255, 255, 255, 255, 255, 130,   0,   0,   3, 246, 255, 255, 255,
                255, 255, 255, 255, 139,   0,   0,   0, 200, 255, 255, 255, 255,
                255, 255, 255, 255,  51,   0,   0, 171, 255, 255, 255, 255, 255,
                255, 255, 255, 123,   0,   0,  71, 255, 255, 255, 255, 255, 255,
                255, 255, 255,  50,   0,   0, 205, 255, 255, 255, 255, 255, 255,
                255, 255, 111,   0,   0, 106, 255, 255, 255, 255, 255, 255, 255,
                255, 255,  18,   0,   0, 214, 255, 255, 255, 255, 255, 255, 255,
                255, 246,   0,   0,  61, 255, 255, 255, 255, 255, 255, 255, 255,
                255,  99,   0,   0, 174, 255, 255, 255, 255, 255, 255, 255, 255,
                255, 117,   0,   0, 243, 255, 255, 255, 255, 255, 255, 255, 255,
                255,  20,   0, 144, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                227,   0,   0,  64, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                183,   0,   0,  73, 136, 138, 137, 138, 138, 137, 137, 132, 255,
                145,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 228,
                142,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 222,
                255, 149, 147, 151, 145, 146, 145, 145, 148, 147, 145, 147, 255
            };                    //2
        float[] tres = new float[]    
        {
                255, 254, 251, 255, 191,  54,  93,  57, 156, 253, 255, 255, 255,
                255, 255, 255,  81,   0,   0,   0,   0,   0,   0, 181, 255, 255,
                255, 255,  65,   0,   0,   0,   0,   0,   0,   0,  28, 193, 255,
                255, 143,   0,   0,  16, 107, 218, 117,  55,   0,   0,  18, 255,
                255,  47,   0,   0, 220, 255, 255, 255, 255,  82,   0,   0, 207,
                168,   0,   0, 122, 255, 255, 255, 255, 255, 161,   0,   0,  97,
                255, 149, 161, 202, 254, 255, 255, 255, 255, 189,   0,   0, 130,
                255, 255, 255, 255, 255, 255, 254, 255, 255, 173,   0,   0, 112,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 164,   0,   0, 110,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 119,   0,   0, 230,
                255, 255, 255, 255, 255, 255, 255, 255, 255,   0,   0,  44, 255,
                255, 255, 255, 255, 255, 255, 255, 255,  51,   0,   0, 183, 255,
                255, 255, 255, 255, 255, 111,   0,   0,   0,   0,  28, 226, 255,
                255, 255, 255, 255, 255,  88,   0,   0,   0,   0, 124, 255, 255,
                255, 255, 255, 255, 255, 113,   0,   0,   0,   0,  25, 238, 255,
                255, 255, 255, 255, 255, 255, 255, 243,  60,   0,   0, 148, 255,
                255, 255, 255, 255, 255, 255, 255, 255, 245,   0,   0,  22, 255,
                255, 255, 255, 255, 255, 255, 255, 255, 255,  52,   0,   0, 255,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 157,   0,   0, 210,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 166,   0,   0, 130,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 167,   0,   0, 125,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 183,   0,   0, 174,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 190,   0,   0, 189,
                250, 146, 156, 195, 255, 255, 255, 255, 255, 188,   0,   0, 182,
                173, 110,   0, 124, 255, 255, 255, 255, 255, 156,   0,   0, 158,
                255,  47,   0,   0, 227, 255, 255, 255, 255,  74,   0,   0, 211,
                255,  95,   0,   0,  15, 109, 213, 125,  53,   0,   0,  20, 255,
                255, 255,  54,   0,   0,   0,   0,   0,   0,   0,  26, 190, 255,
                255, 255, 255,  82,   0,   0,   0,   0,   0,   0, 177, 255, 255,
                255, 255, 255, 255, 176,  30,  89, 107, 148, 252, 255, 255, 255
            };                 //3
        
        float[] cuatro = new float[]
                {
                255, 255, 255, 255, 255, 247, 132, 122, 116, 118, 120, 120, 255,
                255, 255, 255, 255, 255, 206,   0,   0,   0,   0,   0,   0, 166,
                255, 255, 255, 255, 255,  60,   0,   0,   0,   0,   0,   0, 174,
                255, 255, 255, 255, 203,   0,   0,   0,   0,   0,   0,   0, 170,
                255, 255, 255, 255, 101,   0,   0,  87, 255, 165,   0,   0, 172,
                255, 255, 255, 234,   0,   0,   0, 210, 255, 118,   0,   0, 169,
                255, 255, 255, 150,   0,   0, 121, 255, 255, 118,   0,   0, 174,
                255, 255, 217,   4,   0,   0, 242, 255, 255, 118,   0,   0, 169,
                255, 255,  75,   0,   0, 167, 255, 255, 255, 118,   0,   0, 170,
                255, 198,   0,   0,   0, 208, 255, 255, 255, 118,   0,   0, 169,
                255, 152,   0,   0,  52, 255, 255, 255, 255, 118,   0,   0, 169,
                213,   0,   0,   0, 210, 255, 255, 255, 255, 118,   0,   0, 169,
                124,   0,   0,  93, 255, 255, 255, 255, 255, 118,   0,   0, 169,
                123,   0,   0, 132, 255, 255, 255, 255, 255, 118,   0,   0, 172,
                124,   0,   0, 134, 255, 255, 255, 255, 255, 117,   0,   0, 168,
                124,   0,   0, 134, 255, 255, 255, 255, 255, 118,   0,   0, 169,
                123,   0,   0, 132, 255, 255, 255, 255, 255, 118,   0,   0, 169,
                124,   0,   0,  90, 255, 255, 255, 255, 255, 151,   0,   0, 171,
                124,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  35,
                124,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  34,
                122,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  35,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 149,   0,   0, 172,
                255, 255, 255, 255, 255, 254, 255, 255, 255, 123,   0,   0, 172,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 124,   0,   0, 169,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 119,   0,   0, 173,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 114,   0,   0, 168,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 112,   0,   0, 169,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 118,   0,   0, 167,
                255, 255, 255, 255, 255, 255, 255, 255, 255,  93,   0,   0, 187,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 236, 244, 255
            };                    //4
        float[] cinco = new float[]    
        {
                253, 188, 106,  99,  98,  98,  98,  98,  98,  98,  98, 159, 255,
                255, 170,   0,   0,   0,   0,   0,   0,   0,   0,   0,  42, 255,
                255,  56,   0,   0,   0,   0,   0,   0,   0,   0,   0,  27, 255,
                255,   9,   0,   0,  93, 121, 121, 121, 121, 120, 121, 199, 255,
                255,  13,   0,  89, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                255,  21,   0,  83, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                255,  30,   0,  60, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                255,  42,   0,  45, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                255,  47,   0,  30, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                255,  46,   0,  33, 255, 229, 172, 210, 255, 255, 255, 255, 255,
                255,   0,   0,   0,   0,   0,   0,   0,   0, 100, 255, 255, 255,
                228,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10, 255, 255,
                174,   0,   0,   0,   0,  18,  43, 144,   0,   0,   0, 108, 255,
                127,   0,   0,   0,  99, 255, 255, 255, 132,   0,   0,  24, 255,
                223,  22,   0,  23, 255, 255, 255, 255, 254, 151,   0,   0,  80,
                255, 255, 222, 243, 255, 255, 255, 255, 255, 167,   0,   0, 107,
                255, 255, 255, 255, 255, 255, 255, 255, 254, 179,   0,   0, 149,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 224,   0,   0, 147,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 223,   0,   0, 124,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 174,   0,   0,  81,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 137,   0,   0,  90,
                255, 255, 255, 255, 255, 255, 255, 255, 255,  49,   0,   0, 225,
                255, 255, 255, 255, 255, 255, 255, 254, 255,  90,   0,  47, 255,
                255, 255, 255, 255, 255, 255, 255, 255, 152,   0,   0,  80, 255,
                255, 180,  39, 249, 255, 255, 255, 255, 142,   0,   0, 104, 255,
                244,   0,   0,  35, 251, 255, 255, 186,  10,   0,  52, 255, 255,
                255,  23,   0,   0,  53, 158, 111,   5,   0,   0, 119, 255, 255,
                255, 108,   0,   0,   0,   0,   0,   0,   0,  97, 255, 255, 255,
                255, 255,  89,   0,   0,   0,   0,   0, 126, 234, 255, 255, 255,
                255, 255, 255, 236, 138,  61,  57, 161, 255, 255, 255, 255, 255
            };                    //5
        float[] seis = new float[]    
        {
                255, 255, 255, 255, 255, 255, 254, 255, 202, 153, 254, 255, 255,
                255, 255, 255, 255, 255, 255, 255, 243,   0,   0,  49, 255, 255,
                255, 255, 255, 255, 255, 255, 255,  27,   0,   0,  34, 255, 255,
                255, 255, 255, 255, 255, 253, 150,   0,   0,  21, 229, 255, 255,
                255, 255, 255, 255, 255,  30,   0,   0,   0, 211, 255, 255, 255,
                255, 255, 255, 255, 208,   0,   0,   0, 174, 255, 255, 255, 255,
                255, 255, 255, 255,  92,   0,   0,  76, 255, 255, 255, 255, 255,
                255, 255, 255, 164,   0,   0,   3, 251, 255, 255, 255, 255, 255,
                255, 255, 255,  84,   0,   0, 154, 255, 255, 255, 255, 255, 255,
                255, 255, 160,   0,   0,  74, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 170,   0,   0, 188, 255, 255, 255, 255, 255, 255, 255,
                255, 250,  30,   0,   0,   0,   0,  61,  95, 236, 255, 255, 255,
                255, 149,   0,   0,   0,   0,   0,   0,   0,   0, 175, 255, 255,
                255, 184,   0,   0,   0,   0,   0,   0,   0,   0,  72, 255, 255,
                255,  31,   0,   0,  24, 205, 255, 229,  26,   0,   0, 146, 255,
                255,  29,   0,   0, 167, 255, 255, 255, 236,   0,   0,  29, 255,
                167,   0,   0,  74, 255, 255, 255, 255, 255,  39,   0,   0, 242,
                119,   0,   0,  42, 255, 255, 255, 255, 255, 169,   0,   0, 140,
                107,   0,   0, 159, 255, 255, 255, 255, 255, 158,   0,   0,  98,
                106,   0,   0, 163, 255, 255, 255, 255, 255, 173,   0,   0, 111,
                106,   0,   0, 165, 255, 255, 255, 255, 255, 173,   0,   0, 111,
                132,   0,   0, 157, 255, 255, 255, 255, 255, 163,   0,   0, 100,
                167,   0,   0, 165, 255, 255, 255, 255, 255, 156,   0,   0,  98,
                255,   0,   0,  42, 255, 255, 255, 255, 255, 161,   0,   0, 185,
                255,  31,   0,  66, 253, 255, 255, 255, 255,  70,   0,  17, 255,
                255, 168,   0,   0, 118, 255, 255, 255, 132,   0,   0,  18, 255,
                255, 190,   0,   0,   0, 141, 149, 113,  23,   0,   0, 122, 255,
                255, 255, 144,   0,   0,   0,   0,   0,   0,   0,  72, 255, 255,
                255, 255, 255, 111,   0,   0,   0,   0,   0,  31, 255, 255, 255,
                255, 255, 255, 255, 216, 100,  61, 106, 197, 255, 255, 255, 255
            };                    //6
            
        float[] siete = new float[]
        {
                255,  68,  98,  97,  58,  54, 103,  50,  62, 105,  47, 105,  41,
                190,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                209,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                225, 179, 170, 167, 172, 164, 162, 162, 163,  93,   0,   0,   0,
                255, 255, 255, 255, 255, 255, 255, 255, 255,  90,   0,   0,  48,
                255, 255, 255, 255, 255, 255, 255, 255, 196,   0,   0,   3, 227,
                255, 255, 255, 255, 255, 255, 255, 255,  69,   0,   0, 128, 255,
                255, 255, 255, 255, 255, 255, 255, 214,   0,   0,   0, 218, 255,
                255, 255, 255, 255, 255, 255, 255, 163,   0,   0,  64, 255, 255,
                255, 255, 255, 255, 255, 255, 255,  65,   0,   0, 215, 255, 255,
                255, 255, 255, 255, 255, 255, 111,   0,   0, 139, 255, 255, 255,
                255, 255, 255, 255, 255, 255, 116,   0,   0, 111, 255, 255, 255,
                255, 255, 255, 255, 255, 211,   0,   0,  76, 255, 255, 255, 255,
                255, 255, 255, 255, 255, 151,   0,   0, 142, 255, 255, 255, 255,
                255, 255, 255, 255, 255, 100,   0,   0, 155, 255, 255, 255, 255,
                255, 255, 255, 255, 218,   0,   0,   0, 247, 255, 255, 255, 255,
                255, 255, 255, 255, 150,   0,   0,  65, 255, 255, 255, 255, 255,
                255, 255, 255, 255,  58,   0,   0, 163, 255, 255, 255, 255, 255,
                255, 255, 255, 255,  67,   0,   0, 212, 255, 255, 255, 255, 255,
                255, 255, 255, 246,  60,   0,  43, 255, 255, 255, 255, 255, 255,
                255, 255, 255, 114,   0,   0, 127, 255, 255, 255, 255, 255, 255,
                255, 255, 255, 136,   0,   0, 113, 255, 255, 255, 255, 255, 255,
                255, 255, 255, 193,   0,   0, 238, 255, 255, 255, 255, 255, 255,
                255, 255, 243,   9,   0,  59, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 223,  14,   0,  37, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 203,   0,   0, 119, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 189,   0,   0, 162, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 158,   0,   0, 156, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 143,   0,   0, 150, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 251, 183, 179, 255, 255, 255, 255, 255, 255, 255, 255
            };                    //7
            float[] ocho = new float[]
            {
                255, 255, 255, 255, 224, 136,  98, 127, 207, 253, 255, 255, 255,
                255, 255, 255, 115,   0,   0,   0,   0,   0,  51, 253, 255, 255,
                255, 255,  46,   0,   0,   0,   0,   0,   0,   0,  82, 255, 255,
                255, 125,   0,   0,   0, 133, 143, 124,   0,   0,   0, 121, 255,
                255,  17,   0,   0, 118, 255, 255, 255, 148,   0,   0,  37, 255,
                255,   8,   0,  54, 255, 255, 255, 255, 255, 120,   0,   0, 176,
                136,   0,   0, 167, 255, 255, 255, 255, 255, 155,   0,   0, 153,
                107,   0,   0, 162, 254, 255, 255, 255, 255, 184,   0,   0, 155,
                113,   0,   0, 149, 255, 255, 255, 255, 255, 188,   0,   0, 108,
                200,   0,   0,  84, 255, 255, 255, 255, 255, 164,   0,   0, 124,
                255,  41,   0,   0, 240, 255, 255, 255, 255,  53,   0,  18, 255,
                255, 134,   0,   0,  19, 248, 255, 251, 160,   0,   0, 187, 255,
                255, 245,  62,   0,   0,   0,  51,   0,   0,   0,   0, 213, 255,
                255, 254, 156,   0,   0,   0,   0,   0,   0,   0,  47, 255, 255,
                255, 253,  52,   0,   0,   0,   0,   0,   0,   0,   0, 243, 255,
                255, 121,   0,   0,  35, 223, 252, 226,  13,   0,   0, 167, 255,
                255,  24,   0,   0, 209, 255, 255, 255, 244,  58,   0,  46, 255,
                255,  39,   0,  52, 255, 255, 255, 255, 255,  72,   0,   0, 226,
                186,   0,   0, 172, 255, 255, 255, 255, 255, 158,   0,   0, 114,
                119,   0,   0, 152, 255, 255, 255, 255, 255, 167,   0,   0, 102,
                107,   0,   0, 165, 255, 255, 255, 255, 255, 176,   0,   0, 118,
                107,   0,   0, 165, 255, 255, 255, 255, 255, 183,   0,   0, 119,
                140,   0,   0, 171, 255, 255, 255, 255, 255, 165,   0,   0, 100,
                232,   0,   0,  50, 251, 255, 255, 255, 255, 165,   0,   0, 136,
                255,  47,   0,  64, 255, 255, 255, 255, 255,  44,   0,   6, 255,
                255,  16,   0,   0, 125, 255, 255, 255, 184,   0,   0,  33, 255,
                255, 125,   0,   0,   0, 131, 150, 127,  30,   0,   0, 122, 255,
                255, 255,  47,   0,   0,   0,   0,   0,   0,   0,  77, 255, 255,
                255, 255, 255, 120,   0,   0,   0,   0,   0,  61, 252, 255, 255,
                255, 255, 255, 255, 214, 118,  60, 131, 190, 255, 255, 255, 255
            };                    //8
            
            float[] nueve = new float[]
            {  
                255, 255, 255, 255, 229, 153, 120, 159, 241, 255, 255, 255, 255,
                255, 255, 253,  44,   0,   0,   0,   0,   0,  59, 255, 255, 255,
                255, 255,  86,   0,   0,   0,   0,   0,   0,   0,  59, 255, 255,
                255, 135,   0,   0,   0, 111, 135,  24,   0,   0,   0, 138, 255,
                255,  39,   0,   0, 139, 255, 255, 255,  82,   0,   0,  30, 255,
                223,   0,   0,  16, 255, 255, 254, 255, 252,  25,   0,  11, 255,
                111,   0,   0, 136, 255, 255, 255, 255, 255, 170,   0,   0, 180,
                130,   0,   0, 144, 255, 255, 255, 255, 255, 114,   0,   0, 104,
                184,   0,   0, 193, 255, 255, 255, 255, 255, 131,   0,   0, 128,
                205,   0,   0, 213, 255, 255, 255, 255, 255, 157,   0,   0, 144,
                192,   0,   0, 210, 255, 255, 255, 255, 255, 153,   0,   0, 193,
                152,   0,   0, 159, 255, 255, 255, 255, 255, 117,   0,   0, 175,
                106,   0,   0, 120, 255, 255, 255, 255, 255, 140,   0,   0, 136,
                165,   0,   0, 174, 255, 255, 255, 255, 255, 116,   0,   0, 109,
                255,  10,   0,  35, 249, 255, 255, 255, 240,   0,   0,   0, 179,
                255, 146,   0,   0,  10, 233, 254, 220,  19,   0,   0,  55, 255,
                255, 215,   0,   0,   0,   0,   0,   0,   0,   0,   0,  33, 255,
                255, 255, 164,   0,   0,   0,   0,   0,   0,   0,   0, 151, 255,
                255, 255, 255, 247,  80,   0,   0,   0,   0,   0,   0, 192, 255,
                255, 255, 255, 255, 255, 255, 255,  68,   0,   0,  74, 255, 255,
                255, 255, 255, 255, 255, 255, 255, 119,   0,   0, 165, 255, 255,
                255, 255, 255, 255, 255, 255, 153,   0,   0,   7, 255, 255, 255,
                255, 255, 255, 255, 255, 255,  66,   0,   0, 143, 255, 255, 255,
                255, 255, 255, 255, 255, 141,   0,   0,  99, 254, 255, 255, 255,
                255, 255, 255, 255, 166,   0,   0,   8, 216, 255, 255, 255, 255,
                255, 255, 255, 191,   1,   0,   0, 134, 255, 255, 255, 255, 255,
                255, 255, 181,   0,   0,   0,  55, 255, 255, 255, 255, 255, 255,
                255, 218,   0,   0,   0,  16, 247, 255, 255, 255, 255, 255, 255,
                255, 255,  65,   0,   0, 241, 255, 255, 255, 255, 255, 255, 255,
                254, 255, 255, 190, 253, 255, 255, 255, 255, 255, 255, 255, 255
            };                    //9
        
        float[] A = new float[]
        {  
                255, 255, 255, 255, 136,  98, 103, 107, 102, 103, 173, 255, 255,
                255, 255, 255, 255,   0,   0,   0,   0,   0,   0,   0, 255, 255,
                255, 255, 255, 188,   0,   0,   0,   0,   0,   0,   0, 227, 255,
                255, 255, 255, 146,   0,   0,   0,   0,   0,   0,   0, 202, 255,
                255, 255, 255, 132,   0,   0,   0,   0,   0,   0,   0, 183, 255,
                255, 255, 255, 156,   0,   0,   0,   0,   0,   0,   0, 184, 255,
                255, 255, 255, 167,   0,   0,  13, 119, 120,   0,   0, 169, 255,
                255, 255, 255,  26,   0,   0, 164, 255, 146,   0,   0,  80, 255,
                255, 255, 253,  36,   0,   0, 170, 255, 130,   0,   0,  49, 255,
                255, 255, 250,  69,   0,   0, 199, 255, 144,   0,   0,  83, 255,
                255, 255, 248,   0,   0,   0, 229, 255, 191,   0,   0, 119, 255,
                255, 255, 229,   0,   0,   0, 254, 255, 239,   0,   0,   0, 255,
                255, 255, 171,   0,   0, 189, 255, 255, 255,  36,   0,   0, 218,
                255, 255, 102,   0,   0, 116, 255, 255, 255, 110,   0,   0, 151,
                255, 255,  81,   0,   0,  76, 255, 255, 255,  69,   0,   0, 118,
                255, 255, 133,   0,   0, 118, 255, 255, 255,  55,   0,   0, 128,
                255, 255, 209,   0,   0, 164, 255, 255, 255, 148,   0,   0, 165,
                255, 255,  45,   0,   0, 203, 255, 255, 255, 172,   0,   0, 173,
                255, 243,   0,   0,   3, 235, 255, 255, 255, 193,   0,   0,  16,
                255, 206,   0,   0,  46, 241, 255, 255, 255, 202,   8,   0,  28,
                255, 185,   0,   0,  19, 173, 248, 246, 246, 135,   6,   0,  32,
                255, 171,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                255, 169,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                255, 149,   0,   0,  11, 127, 132, 128, 136, 124,   3,   0,   0,
                255,  49,   0,   0, 131, 255, 255, 255, 255, 255, 109,   0,   0,
                255,  76,   0,   0, 132, 255, 255, 255, 255, 255,  91,   0,   0,
                255, 123,   0,   0, 188, 255, 255, 255, 255, 255, 131,   0,   0,
                251,   0,   0,   0, 229, 255, 255, 255, 255, 255, 187,   0,   0,
                233,   0,   0,   0, 255, 255, 255, 255, 255, 255, 248,   0,   0,
                249, 253, 248, 254, 255, 255, 255, 255, 255, 255, 255, 250, 241
            };                      //A   
            float[] B = new float[]
            {   
                255, 106, 108, 108, 108, 109, 109, 139, 255, 255, 255, 255, 255,
                158,   0,   0,   0,   0,   0,   0,   0,   0, 120, 255, 255, 255,
                159,   0,   0,   0,   0,   0,   0,   0,   0,   0,   8, 255, 255,
                155,   0,   0,  91, 214, 212, 207, 108,  45,   0,   0, 106, 255,
                162,   0,   0, 150, 255, 255, 255, 255, 209,   0,   0,  23, 255,
                158,   0,   0, 144, 255, 254, 255, 255, 255,  50,   0,   0, 118,
                159,   0,   0, 153, 255, 255, 255, 255, 255, 207,   0,   0, 122,
                159,   0,   0, 159, 255, 255, 255, 255, 255, 222,   0,   0, 180,
                161,   0,   0, 203, 255, 255, 255, 255, 255, 235,   0,   0, 190,
                155,   0,   0, 102, 252, 255, 255, 254, 255, 209,   0,   0, 126,
                157,   0,   0, 139, 255, 255, 255, 255, 255,  53,   0,   0, 108,
                157,   0,   0, 146, 255, 255, 255, 255, 220,   0,   0,  25, 255,
                149,   0,   0,  82, 219, 215, 213, 127,   0,   0,   0, 113, 255,
                157,   0,   0,   0,   0,   0,   0,   0,   0,   0,  14, 255, 255,
                157,   0,   0,   0,   0,   0,   0,   0,   0,   0, 159, 255, 255,
                157,   0,   0,  11,  58,  58,  63, 114,   0,   0,  21,  55, 255,
                157,   0,   0, 147, 255, 255, 255, 255, 160,   0,   0,  19, 255,
                157,   0,   0, 146, 255, 255, 255, 255, 255,  62,   0,   0, 185,
                157,   0,   0, 146, 255, 255, 255, 255, 255, 190,   0,   0,  90,
                157,   0,   0, 161, 255, 255, 254, 253, 255, 212,   0,   0, 137,
                157,   0,   0, 159, 255, 255, 255, 255, 255, 223,   0,   0, 190,
                181,   0,   0, 148, 255, 255, 255, 254, 255, 229,   0,   0, 190,
                157,   0,   0, 147, 255, 255, 255, 255, 255, 215,   0,   0, 165,
                157,   0,   0, 148, 255, 255, 255, 255, 255, 209,   0,   0, 107,
                156,   0,   0, 148, 254, 255, 255, 255, 255, 126,   0,   0, 108,
                156,   0,   0, 147, 255, 255, 255, 255, 254,  82,   0,  10, 255,
                155,   0,   0,  68, 255, 255, 255, 210,  33,   0,   0, 139, 255,
                157,   0,   0,   0,   0,   0,   0,   0,   0,   0,  36, 249, 255,
                157,   0,   0,   0,   0,   0,   0,   0,   0,  65, 198, 255, 255,
                226,  57,  39,  37,  36,  36,  36, 155, 172, 255, 255, 255, 255
            };                      //B
            float[] C = new float[]
            {   
                255, 253, 255, 255, 119, 128,  16, 145, 130, 255, 255, 255, 255,
                255, 255, 191,  29,   0,   0,   0,   0,   0,  22, 197, 255, 255,
                255, 188,   0,   0,   0,   0,   0,   0,   0,   0,   0, 222, 255,
                255,  26,   0,   0,  16, 221, 253, 228,  23,   0,   0,  24, 255,
                254,   0,   0,  34, 250, 255, 255, 255, 249,  38,   0,  47, 255,
                 98,   0,   0, 165, 255, 255, 255, 255, 255, 117,  23,  76, 253,
                171,   0,   0, 118, 255, 255, 255, 255, 255, 254, 255, 255, 255,
                 10,   0,   0, 190, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                 21,   0,  85, 253, 255, 255, 253, 255, 255, 255, 255, 255, 255,
                  0,   0,  53, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0,  42, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 108, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 170, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 167, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 168, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 172, 255, 255, 255, 254, 255, 255, 255, 255, 255, 255,
                  0,   0, 166, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 156, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 174, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0,  34, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0,  51, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                 21,   0,  86, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  9,   0,   0, 245, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                168,   0,   0, 163, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                104,   0,   0, 171, 255, 255, 255, 255, 255, 117,  19,  48, 255,
                252,  39,   0,  35, 250, 255, 255, 255, 249,  40,   0,  39, 255,
                255,  25,   0,   0,  20, 225, 248, 208,  26,   0,   0,  24, 255,
                255, 215,   0,   0,   0,   0,   0,   0,   0,   0,   0, 229, 255,
                255, 255, 204,  27,   0,   0,   0,   0,   0,  22, 201, 255, 255,
                255, 255, 255, 255, 172, 174,  44, 162, 136, 255, 255, 255, 255
            };
            float[] D = new float[]
            {   
                237, 113, 112, 112, 111, 110, 109, 127, 255, 255, 255, 255, 255,
                173,   0,   0,   0,   0,   0,   0,   0,   0, 140, 245, 255, 255,
                173,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 247, 255,
                173,   0,   0, 119, 172, 168, 170, 105,   0,   0,   0,  24, 255,
                173,   0,   0, 170, 255, 255, 255, 255, 250,  19,   0,   0, 245,
                183,   0,   0, 170, 255, 255, 255, 255, 255, 173,   0,   0, 126,
                185,   0,   0, 183, 255, 255, 255, 255, 255, 125,   0,   0, 102,
                173,   0,   0, 197, 255, 255, 255, 255, 255, 131,   0,   0, 155,
                173,   0,   0, 176, 255, 255, 255, 255, 255, 183,   0,   0, 198,
                173,   0,   0, 161, 255, 255, 255, 255, 255, 248,   0,   0,  57,
                174,   0,   0, 174, 255, 255, 255, 255, 255, 244,   0,   0,  12,
                180,   0,   0, 190, 255, 255, 255, 255, 255, 248,  88,   0, 169,
                183,   0,   0, 185, 255, 255, 255, 255, 255, 255,  64,   0,  14,
                173,   0,   0, 166, 255, 255, 255, 255, 255, 255,  92,   0,  16,
                204,   0,   0, 217, 255, 255, 255, 255, 255, 255,  86,   0,  18,
                184,   0,   0, 188, 255, 255, 255, 255, 255, 255,  86,   0,  18,
                173,   0,   0, 166, 255, 255, 255, 255, 255, 255,  91,   0,  16,
                178,   0,   0, 163, 255, 255, 255, 255, 255, 255,  85,   0,  15,
                175,   0,   0, 159, 255, 255, 255, 255, 255, 255,   0,   0,  12,
                173,   0,   0, 170, 255, 255, 255, 255, 255, 255,   0,   0,  10,
                176,   0,   0, 170, 255, 255, 255, 255, 255, 224,   0,   0,   9,
                179,   0,   0, 164, 255, 255, 255, 255, 255, 185,   0,   0, 205,
                172,   0,   0, 167, 255, 255, 255, 255, 255, 137,   0,   0, 179,
                173,   0,   0, 170, 255, 255, 255, 255, 255, 117,   0,   0, 109,
                173,   0,   0, 167, 255, 255, 255, 255, 255, 146,   0,   0, 108,
                180,   0,   0, 164, 255, 255, 255, 255, 253,  18,   0,   0, 219,
                177,   0,   0, 104, 255, 255, 255, 246, 152,   0,   0,  50, 255,
                174,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 130, 255,
                180,   0,   0,   0,   0,   0,   0,   0,   0,  23, 155, 255, 255,
                120,  30,  26,  25,  25,  26,  30,  19, 114, 255, 255, 255, 255
            };                     //D
            float[] E = new float[]
            {   
                255, 133, 108, 105, 104, 104, 104, 104, 104, 104, 104, 117, 255,
                139,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 255,
                138,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 255,
                138,   0,   0,  53, 185, 186, 186, 183, 184, 185, 184, 202, 255,
                138,   0,   0, 165, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 165, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 163, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 161, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 159, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 158, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 160, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 162, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0,  47, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0,   0,   0,   0,   0, 173, 255, 255, 255, 255, 255,
                138,   0,   0,   0,   0,   0,   0,   0, 255, 255, 255, 255, 255,
                138,   0,   0,   0,  16,  25,  18, 111, 255, 255, 255, 255, 255,
                138,   0,   0, 158, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 159, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 165, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 163, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 165, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 163, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 161, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 159, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 158, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0, 160, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                138,   0,   0,  45, 224, 220, 219, 220, 219, 219, 221, 224, 247,
                138,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11,
                148,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  12,
                255, 107, 113, 113, 115, 112, 111, 111, 111, 111, 114, 128, 174
            };                      //E
            float[] F = new float[]
            {   
                253, 103, 104, 104, 104, 104, 104, 104, 104, 104, 104, 105, 107,
                110,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                111,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                111,   0,   0,  71, 171, 183, 183, 183, 184, 183, 186, 184, 186,
                111,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                104,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                111,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                111,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                111,   0,   0,  89, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                111,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                111,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                111,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                111,   0,   0, 152, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                111,   0,   0,   0,   0,   0,   0,   0, 214, 255, 255, 255, 255,
                111,   0,   0,   0,   0,   0,   0,   0, 195, 255, 255, 255, 255,
                111,   0,   0,   0,  23,  22,  22,  76, 255, 255, 255, 255, 255,
                111,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                114,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                119,   0,   0,  90, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                123,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                122,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                120,   0,   0,  89, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                117,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                115,   0,   0,  92, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                112,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                111,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                111,   0,   0,  94, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                113,   0,   0,  89, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                112,   0,   0,  88, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                204, 140, 132, 246, 255, 255, 255, 255, 255, 255, 255, 255, 255
            };                      //F
            float[] G = new float[]
            {   
                255, 255, 255, 255, 125, 139,  72, 106, 199, 255, 255, 255, 255,
                255, 255,  60,  15,   0,   0,   0,   0,   0,  80, 248, 255, 255,
                255, 124,   0,   0,   0,   0,   0,   0,   0,   0,   0, 190, 255,
                179,   0,   0,   0,  24, 242, 253, 121,   3,   0,   0,  67, 255,
                164,   0,   0,  57, 255, 255, 254, 255, 204,   0,   0,   0, 218,
                 21,   0,   0, 183, 255, 255, 255, 255, 255, 119, 108, 150, 249,
                  0,   0,   5, 234, 252, 255, 255, 255, 254, 255, 255, 255, 255,
                  0,   0,   3, 255, 251, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 103, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0,  65, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 161, 255, 255, 255, 255, 255, 255, 255, 255, 255, 254,
                  0,   0, 206, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                  0,   0, 255, 255, 255, 255, 255, 251, 169, 169, 170, 174, 255,
                  0,   0, 255, 255, 255, 255, 255, 105,   0,   0,   0,   0, 129,
                  0,   0, 255, 255, 255, 255, 255,  95,   0,   0,   0,   0, 142,
                  0,   0, 255, 255, 255, 255, 255, 252,  52,   0,   0,   0, 131,
                  0,   0, 214, 255, 255, 255, 255, 255, 255,  88,   0,   0, 131,
                  0,   0, 174, 255, 255, 255, 255, 255, 255,  88,   0,   0, 129,
                  0,   0,  98, 255, 255, 255, 255, 255, 255,  88,   0,   0, 131,
                  0,   0,  90, 255, 255, 255, 255, 255, 255,  88,   0,   0, 131,
                  0,   0, 184, 255, 255, 255, 255, 255, 255,  88,   0,   0, 131,
                  0,   0,   5, 238, 255, 255, 255, 255, 254,  88,   0,   0, 127,
                 25,   0,   0, 186, 255, 255, 255, 255, 255,  88,   0,   0, 131,
                177,   0,   0,  46, 255, 255, 254, 255, 237,   0,   0,   0, 185,
                153,   0,   0,   0, 123, 253, 254, 226,  66,   0,   0,  95, 255,
                255,  41,   0,   0,   0,   0,   0,   0,   0,   0,   0, 165, 255,
                255, 255, 124,   0,   0,   0,   0,   0,   0,   6, 175, 255, 255,
                255, 255, 255, 242, 121,  30,  42, 128, 129, 255, 255, 255, 255
            };                      //G
            float[] H = new float[]
            {   
                255, 125, 115, 255, 255, 255, 255, 255, 255, 255, 114, 115, 255,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 138,   0,   0, 190,
                250,   0,   0, 149, 255, 255, 255, 255, 255, 133,   0,   0, 192,
                249,   0,   0, 150, 255, 255, 255, 255, 255, 131,   0,   0, 196,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 138,   0,   0, 200,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 132,   0,   0, 198,
                249,   0,   0, 150, 255, 255, 255, 255, 255, 134,   0,   0, 195,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 133,   0,   0, 192,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 138,   0,   0, 200,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 133,   0,   0, 193,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 133,   0,   0, 197,
                250,   0,   0, 149, 255, 255, 255, 255, 255, 131,   0,   0, 199,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 136,   0,   0, 200,
                249,   0,   0, 150, 255, 255, 255, 255, 255, 131,   0,   0, 201,
                249,   0,   0, 156, 255, 255, 255, 255, 255, 127,   0,   0, 204,
                249,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 206,
                249,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 198,
                249,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 200,
                249,   0,   0, 161, 255, 255, 255, 255, 255, 131,   0,   0, 200,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 135,   0,   0, 197,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 138,   0,   0, 193,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 131,   0,   0, 190,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 138,   0,   0, 192,
                249,   0,   0, 150, 255, 255, 255, 255, 255, 134,   0,   0, 195,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 132,   0,   0, 198,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 137,   0,   0, 199,
                249,   0,   0, 150, 255, 255, 255, 255, 255, 131,   0,   0, 196,
                250,   0,   0, 149, 255, 255, 255, 255, 255, 133,   0,   0, 193,
                249,   0,   0, 149, 255, 255, 255, 255, 255, 131,   0, 122, 202,
                255, 211, 187, 251, 255, 255, 255, 255, 255, 249, 184, 195, 255
            };                       //H
            float[] J = new float[]
            {   
                255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 171, 163, 255,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 131,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 124,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 131,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 129,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 125,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 125,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 124,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 125,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 125,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 132,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 131,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 124,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 124,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 125,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 125,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 124,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 124,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 131,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 132,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 125,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 124,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 163,   0,   0, 125,
                255, 255, 255, 255, 255, 255, 255, 255, 254, 164,   0,   0, 125,
                255, 255, 248, 255, 255, 255, 255, 255, 255, 159,   0,   0, 122,
                255,  74,   0, 149, 255, 255, 255, 255, 255,  30,   0,   0, 112,
                247,   0,   0,   0, 103, 255, 254, 255, 139,   0,   0,  24, 255,
                255, 100,   0,   0,   0,   0,   0,   0,   0,   0,   0, 117, 255,
                255, 255, 122,  19,   0,   0,   0,   0,   0,   0, 119, 255, 255,
                255, 255, 255, 240, 119,  42,  80,  33, 113, 255, 255, 255, 255
            };                      //J
            float[] K = new float[]
            {   
                255, 112, 108, 242, 255, 255, 255, 255, 231, 114, 134, 255, 255,
                108,   0,   0,  87, 255, 255, 255, 255,  99,   0,   0, 156, 255,
                108,   0,   0,  87, 255, 255, 255, 208,   0,   0,  37, 255, 255,
                108,   0,   0,  87, 255, 255, 255, 138,   0,   0, 172, 255, 255,
                108,   0,   0,  87, 255, 255, 255,  31,   0,   0, 192, 255, 255,
                108,   0,   0,  87, 255, 255, 170,   0,   0,  33, 255, 255, 255,
                108,   0,   0,  87, 255, 255,  60,   0,   0, 145, 255, 255, 255,
                108,   0,   0,  87, 255, 222,   0,   0,  20, 247, 255, 255, 255,
                108,   0,   0,  87, 255, 165,   0,   0, 143, 255, 255, 255, 255,
                108,   0,   0,  88, 255,  80,   0,   0, 173, 255, 255, 255, 255,
                108,   0,   0,  87, 163,   0,   0,  82, 255, 255, 255, 255, 255,
                108,   0,   0,   0,  33,   0,   0,   0, 231, 255, 255, 255, 255,
                108,   0,   0,   0,   0,   0,   0,   0, 148, 255, 255, 255, 255,
                108,   0,   0,   0,   0,   0,   0,   0, 127, 255, 255, 255, 255,
                108,   0,   0,   0,   0,   0,   0,   0,  67, 255, 255, 255, 255,
                108,   0,   0,   0,   0,   0,   0,   0,   0, 161, 255, 255, 255,
                108,   0,   0,   0,   0, 130, 153,   0,   0, 172, 255, 255, 255,
                108,   0,   0,   0,   0, 195, 191,   0,   0,  40, 255, 255, 255,
                108,   0,   0,   0, 124, 255, 255,  93,   0,   0, 211, 255, 255,
                108,   0,   0,   0, 164, 255, 255,  85,   0,   0, 142, 255, 255,
                108,   0,   0,   0, 233, 255, 255, 184,   0,   0,  19, 255, 255,
                112,   0,   0,  84, 255, 255, 255, 242,   0,   0,   0, 250, 255,
                117,   0,   0,  87, 255, 255, 255, 255,  83,   0,   0, 123, 255,
                114,   0,   0,  87, 255, 255, 255, 255, 172,   0,   0, 183, 255,
                108,   0,   0,  87, 255, 255, 255, 255, 225,   0,   0,  21, 255,
                108,   0,   0,  87, 255, 255, 255, 255, 255, 144,   0,   0, 170,
                108,   0,   0,  87, 255, 255, 255, 255, 255, 126,   0,   0, 140,
                110,   0,   0,  87, 255, 255, 255, 255, 255, 214,   0,   0,   4,
                123,   0,   0,  87, 255, 255, 255, 255, 255, 250,   0,   0,   2,
                251, 142, 122, 231, 255, 255, 255, 255, 255, 255, 170, 132, 114
            };                      //K
            float[] L = new float[]
            {   
                255, 208, 208, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 102, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 106, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                102,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                234, 183, 185, 153, 185, 183, 185, 153, 185, 183, 185, 153, 159
            };                     //L
            float[] M = new float[]
            {   
                253, 104, 108, 226, 255, 255, 255, 255, 255, 240, 112, 112, 251,
                208,   0,   0, 128, 255, 255, 255, 255, 255,  88,   0,   0, 155,
                210,   0,   0,   0, 255, 255, 255, 255, 255,  38,   0,   0, 156,
                210,   0,   0,   0, 224, 255, 255, 255, 252,   0,   0,   0, 156,
                210,   0,   0,   0, 107, 255, 255, 255, 115,   0,   0,   0, 154,
                210,   0,   0,   0, 138, 255, 255, 255, 187,   0,   0,   0, 158,
                210,   0,   0,   0,   8, 255, 255, 255,   6,   0,   0,   0, 160,
                210,   0,   0,   0,   0, 161, 255, 202,   0,   0,   0,   0, 156,
                210,   0,   0,   0,   0, 172, 255, 145,   0,   0,   0,   0, 156,
                210,   0,   0,   0,   0,  40, 255,  27,   0,   0,   0,   0, 156,
                210,   0,   0,   0,   0,   0, 223,  13,   0,   0,   0,   0, 156,
                210,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 156,
                210,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 156,
                210,   0,   0, 147,   0,   0,   0,   0,   0, 141,   0,   0, 156,
                210,   0,   0, 157, 122,   0,   0,   0, 186, 206,   0,   0, 156,
                210,   0,   0, 159, 182,   0,   0,   0, 129, 205,   0,   0, 156,
                210,   0,   0, 160, 252,   0,   0,   0, 249, 203,   0,   0, 156,
                210,   0,   0, 160, 255, 144,   0,  40, 255, 203,   0,   0, 156,
                210,   0,   0, 159, 255, 132,   0,  77, 255, 205,   0,   0, 156,
                210,   0,   0, 159, 255, 207,   0, 193, 255, 205,   0,   0, 169,
                210,   0,   0, 160, 255, 250,   0, 240, 255, 204,   0,   0, 172,
                210,   0,   0, 160, 255, 255, 245, 255, 255, 204,   0,   0, 156,
                210,   0,   0, 159, 255, 255, 255, 255, 255, 207,   0,   0, 156,
                210,   0,   0, 159, 255, 255, 255, 255, 255, 207,   0,   0, 156,
                210,   0,   0, 160, 255, 255, 255, 255, 255, 203,   0,   0, 156,
                210,   0,   0, 160, 255, 255, 255, 255, 255, 208,   0,   0, 156,
                210,   0,   0, 159, 255, 255, 255, 255, 255, 207,   0,   0, 156,
                210,   0,   0, 159, 255, 255, 255, 255, 255, 207,   0,   0, 156,
                209,   0,   0, 158, 255, 255, 255, 255, 255, 204,   0,   0, 157,
                252, 137, 119, 252, 255, 255, 255, 255, 255, 255, 105, 105, 249
            };                        //M
            float[] N = new float[]
            {   
                255, 207, 207, 255, 255, 255, 255, 255, 255, 255, 223, 207, 255,
                172,   0,   0,  57, 255, 255, 255, 255, 255, 216,   0,   0, 114,
                160,   0,   0,  17, 249, 255, 255, 255, 255, 211,   0,   0, 124,
                160,   0,   0,   0, 192, 255, 255, 255, 255, 211,   0,   0, 124,
                161,   0,   0,   0,  81, 255, 255, 255, 255, 211,   0,   0, 124,
                161,   0,   0,   0,   0, 252, 255, 255, 255, 210,   0,   0, 124,
                160,   0,   0,   0,   0, 214, 255, 255, 255, 208,   0,   0, 124,
                161,   0,   0,   0,   0,  90, 255, 255, 255, 219,   0,   0, 124,
                161,   0,   0,   0,   0,   0, 255, 255, 255, 230,   0,   0, 130,
                160,   0,   0,   0,   0,   0, 206, 255, 255, 211,   0,   0, 132,
                160,   0,   0,   0,   0,   0,  99, 255, 255, 211,   0,   0, 124,
                161,   0,   0,  77,   0,   0,   0, 255, 255, 211,   0,   0, 124,
                161,   0,   0, 170, 178,   0,   0, 226, 255, 211,   0,   0, 124,
                160,   0,   0, 170, 182,   0,   0, 136, 255, 209,   0,   0, 124,
                160,   0,   0, 173, 255,  28,   0,  19, 255, 209,   0,   0, 124,
                161,   0,   0, 170, 255, 181,   0,   0, 225, 210,   0,   0, 124,
                161,   0,   0, 171, 255, 167,   0,   0, 147, 208,   0,   0, 124,
                160,   0,   0, 174, 255, 255,   0,   0,  38, 211,   0,   0, 124,
                160,   0,   0, 172, 255, 255, 178,   0,   0,  84,   0,   0, 143,
                161,   0,   0, 170, 255, 255, 148,   0,   0,   0,   0,   0, 136,
                161,   0,   0, 169, 255, 255, 255,   0,   0,   0,   0,   0, 135,
                160,   0,   0, 151, 255, 255, 255, 152,   0,   0,   0,   0, 124,
                161,   0,   0, 178, 255, 255, 255, 173,   0,   0,   0,   0, 124,
                161,   0,   0, 169, 255, 255, 255, 240,   0,   0,   0,   0, 124,
                160,   0,   0, 172, 255, 255, 255, 255, 110,   0,   0,   0, 124,
                160,   0,   0, 174, 255, 255, 255, 255, 167,   0,   0,   0, 124,
                161,   0,   0, 171, 255, 255, 255, 255, 228,   0,   0,   0, 124,
                161,   0,   0, 170, 255, 255, 255, 255, 255,  83,   0,   0, 124,
                172,   0,   0, 174, 255, 255, 255, 255, 255, 169,   0,   0, 134,
                254,  99,  98, 255, 255, 255, 255, 255, 255, 255, 102, 110, 250
            };                     //N
            float[] P = new float[]
            {   
                242,  42,  34,  28,  25,  23,  23, 110, 119, 255, 255, 255, 255,
                175,   0,   0,   0,   0,   0,   0,   0,   0,   0, 171, 255, 255,
                156,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 165, 255,
                143,   0,   0, 134, 255, 255, 255, 255, 163,   0,   0,   0, 252,
                137,   0,   0, 143, 255, 255, 255, 255, 255, 108,   0,   0, 118,
                131,   0,   0, 143, 255, 255, 255, 255, 255, 188,   0,   0, 130,
                121,   0,   0, 143, 255, 255, 255, 255, 255, 235,   0,   0, 191,
                112,   0,   0, 143, 254, 255, 255, 254, 255, 255,   0,   0, 180,
                115,   0,   0, 148, 255, 255, 255, 255, 255, 252,   0,   0,  43,
                164,   0,   0, 145, 255, 255, 255, 255, 255, 255,   0,   0, 141,
                106,   0,   0, 143, 255, 255, 255, 255, 255, 243,   0,   0, 207,
                101,   0,   0, 143, 255, 255, 255, 255, 255, 200,   0,   0, 156,
                101,   0,   0, 143, 255, 255, 255, 255, 255, 143,   0,   0, 111,
                104,   0,   0, 139, 255, 255, 255, 255, 135,   0,   0,   0, 245,
                103,   0,   0,   0, 141, 141, 141,   0,   0,   0,   0,  92, 255,
                100,   0,   0,   0,   0,   0,   0,   0,   0,   0,  96, 255, 255,
                 99,   0,   0,   0,   0,   0,   0,  22, 130, 200, 255, 255, 255,
                103,   0,   0, 140, 255, 255, 255, 255, 255, 255, 255, 255, 254,
                104,   0,   0, 143, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                101,   0,   0, 143, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                 99,   0,   0, 143, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 143, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                105,   0,   0, 143, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                102,   0,   0, 143, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                 99,   0,   0, 143, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                101,   0,   0, 143, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                104,   0,   0, 143, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                103,   0,   0, 143, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                107,   0,   0, 143, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                195, 114, 112, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
            };                       //P
            
            float[] R = new float[]
            {   
                254, 120, 119, 116, 117, 117, 115, 110, 244, 255, 255, 254, 255,
                210,   0,   0,   0,   0,   0,   0,   0,   0,  35, 238, 255, 255,
                214,   0,   0,   0,   0,   0,   0,   0,   0,   0,  35, 230, 255,
                214,   0,   0,  83, 245, 249, 245, 154,  29,   0,   0, 111, 255,
                214,   0,   0, 169, 254, 255, 255, 255, 253,  79,   0,   0, 216,
                214,   0,   0, 170, 253, 255, 254, 255, 255, 176,   0,   0, 106,
                214,   0,   0, 170, 255, 255, 255, 255, 255, 206,   0,   0, 120,
                214,   0,   0, 172, 255, 255, 255, 255, 255, 227,   0,   0, 147,
                229,   0,   0, 177, 255, 255, 255, 255, 255, 243,   0,   0, 169,
                233,   0,   0, 170, 255, 255, 255, 255, 255, 238,   0,   0, 165,
                214,   0,   0, 170, 255, 255, 255, 255, 255, 221,   0,   0, 139,
                214,   0,   0, 170, 255, 255, 255, 255, 255, 193,   0,   0, 106,
                214,   0,   0, 181, 255, 254, 255, 255, 255, 166,   0,   0, 133,
                214,   0,   0, 175, 254, 254, 255, 255, 191,   0,   0,   0, 245,
                214,   0,   0,  29, 164, 165, 165,  24,   0,   0,   0, 121, 255,
                214,   0,   0,   0,   0,   0,   0,   0,   0,   0,  88, 255, 255,
                214,   0,   0,   0,   0,   0,   0,   0,   0,   0, 190, 255, 255,
                215,   0,   0,  70, 255, 255, 255, 155,   0,   0, 157, 255, 255,
                221,   0,   0, 170, 255, 255, 255, 238,   0,   0,  80, 255, 255,
                228,   0,   0, 170, 255, 255, 255, 253,   0,   0, 102, 255, 255,
                231,   0,   0, 170, 255, 255, 255, 255,  97,   0,   0, 241, 255,
                230,   0,   0, 170, 255, 255, 255, 255, 143,   0,   0, 215, 255,
                226,   0,   0, 170, 255, 255, 255, 255, 185,   0,   0, 163, 255,
                222,   0,   0, 170, 255, 255, 255, 255, 219,   0,   0,  82, 255,
                218,   0,   0, 170, 255, 255, 255, 255, 247,   0,   0, 164, 255,
                215,   0,   0, 170, 255, 255, 255, 255, 255,  92,   0,   0, 251,
                214,   0,   0, 170, 255, 255, 255, 255, 255,  55,   0,   0, 244,
                214,   0,   0, 170, 255, 255, 255, 255, 255, 178,   0,   0, 180,
                215,   0,   0, 178, 255, 255, 255, 255, 255, 190,   0,   0, 106,
                255, 109, 102, 252, 255, 255, 255, 255, 255, 255, 115, 106, 248
            };                      //R
            float[] S = new float[]
            {   
                255, 255, 255, 255, 139, 168,  21, 160, 162, 255, 255, 255, 255,
                255, 255, 224,  31,   0,   0,   0,   0,   0,  22, 242, 255, 255,
                255, 227,  33,   0,   0,   0,   0,   0,   0,   0,  34, 236, 255,
                255,  99,   0,   0, 212, 255, 253, 245,   5,   0,   0,  63, 255,
                239,   0,   0,  65, 255, 255, 255, 255, 255,  83,   0,   0, 245,
                186,   0,   0, 161, 255, 255, 255, 255, 255, 133,   0,   0, 238,
                176,   0,   0, 185, 255, 255, 255, 254, 255, 255, 255, 255, 255,
                223,   0,   0,  97, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                253,  24,   0,   0, 227, 255, 255, 255, 255, 255, 255, 255, 255,
                255, 169,   0,   0,  79, 255, 255, 255, 255, 255, 255, 255, 255,
                255, 255,  58,   0,   0, 138, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 208,   0,   0,  27, 251, 255, 255, 255, 255, 255, 255,
                255, 255, 255, 152,   0,   0, 158, 255, 255, 255, 255, 255, 255,
                255, 255, 255, 255,   0,   0,   0, 216, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 126,   0,   0, 126, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 255, 148,   0,   0, 160, 255, 255, 255, 255,
                255, 255, 255, 255, 255, 209,   0,   0,   0, 255, 255, 255, 255,
                255, 255, 255, 255, 255, 255,  48,   0,   0, 137, 255, 255, 255,
                255, 255, 255, 255, 255, 255, 240,  31,   0,   0, 223, 255, 255,
                255, 255, 255, 255, 255, 255, 255, 133,   0,   0,  46, 255, 255,
                255, 255, 255, 255, 255, 255, 255, 255,  88,   0,   0, 186, 255,
                255, 255, 255, 255, 255, 255, 255, 255, 201,   0,   0, 142, 255,
                250, 255, 255, 255, 255, 255, 255, 255, 255, 121,   0,   0, 238,
                255, 246, 246, 255, 255, 255, 255, 255, 255, 158,   0,   0, 207,
                204,   0,   0, 161, 255, 255, 255, 255, 255, 134,   0,   0, 222,
                239,   0,   0,  70, 255, 255, 255, 255, 255,  83,   0,   0, 245,
                255,  88,   0,   0, 181, 245, 252, 235,   6,   0,   0,  69, 255,
                255, 228,  33,   0,   0,   0,   0,   0,   0,   0,  31, 244, 254,
                255, 255, 229,  26,   0,   0,   0,   0,   0,  22, 244, 255, 255,
                255, 255, 255, 255, 165, 163, 111, 169, 178, 255, 255, 255, 255
            };                      //S
            float[] T = new float[]
            {   
                247, 102, 102, 101, 104, 103, 103, 103, 101, 103, 102, 104, 255,
                106,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 237,
                112,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 237,
                255, 245, 245, 245, 180,   0,   0,  37, 237, 245, 245, 251, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 117, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0, 125, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 255, 155, 119, 234, 255, 255, 255, 255, 255
            };                      //T
            float[] U = new float[]
            {   
                255, 232, 220, 255, 255, 255, 255, 255, 255, 255, 239, 224, 255,
                214,   0,   0,  82, 255, 255, 255, 255, 255, 241,   0,   0, 162,
                214,   0,   0,  82, 255, 255, 255, 255, 255, 240,   0,   0, 164,
                214,   0,   0,  82, 255, 255, 255, 255, 255, 240,   0,   0, 164,
                214,   0,   0,  81, 255, 255, 255, 255, 255, 241,   0,   0, 164,
                214,   0,   0,  81, 255, 255, 255, 255, 255, 242,   0,   0, 164,
                214,   0,   0,  81, 255, 255, 255, 255, 255, 241,   0,   0, 164,
                214,   0,   0,  82, 255, 255, 255, 255, 255, 239,   0,   0, 164,
                214,   0,   0,  81, 255, 255, 255, 255, 255, 241,   0,   0, 164,
                214,   0,   0,  81, 255, 255, 255, 255, 255, 242,   0,   0, 164,
                214,   0,   0,  81, 255, 255, 255, 255, 255, 241,   0,   0, 164,
                214,   0,   0,  82, 255, 255, 255, 255, 255, 240,   0,   0, 164,
                214,   0,   0,  82, 255, 255, 255, 255, 255, 240,   0,   0, 164,
                214,   0,   0,  81, 255, 255, 255, 255, 255, 241,   0,   0, 164,
                214,   0,   0,  81, 255, 255, 255, 255, 255, 241,   0,   0, 164,
                214,   0,   0,  82, 255, 255, 255, 255, 255, 240,   0,   0, 164,
                214,   0,   0,  82, 255, 255, 255, 255, 255, 240,   0,   0, 164,
                214,   0,   0,  81, 255, 255, 255, 255, 255, 241,   0,   0, 164,
                214,   0,   0,  81, 255, 255, 255, 255, 255, 242,   0,   0, 164,
                214,   0,   0,  82, 255, 255, 255, 255, 255, 240,   0,   0, 164,
                214,   0,   0,  82, 255, 255, 255, 255, 255, 239,   0,   0, 164,
                214,   0,   0,  81, 255, 255, 255, 255, 255, 241,   0,   0, 164,
                214,   0,   0,  86, 255, 255, 255, 255, 255, 246,   0,   0, 164,
                214,   0,   0,  78, 255, 255, 255, 255, 255, 249,   0,   0, 164,
                218,   0,   0,  73, 255, 255, 255, 255, 255, 227,   0,   0, 164,
                245,   0,   0,  85, 252, 255, 255, 255, 255, 159,   0,   0,  90,
                255, 129,   0,   0,  88, 255, 255, 255, 157,   0,   0,   0, 241,
                255, 225,   0,   0,   0,   0,   0,   0,   0,   0,   0,  86, 255,
                255, 255, 194,   0,   0,   0,   0,   0,   0,   0, 108, 255, 255,
                255, 255, 255, 255, 114,  38,   0,  57, 167, 207, 255, 255, 255
            };                      //U
            float[] V = new float[]
            {  
                37,  49, 254, 255, 255, 255, 255, 255, 255, 199,  34,  42, 255,
                0,   0, 173, 255, 255, 255, 255, 255, 255, 152,   0,   0, 114,
                0,   0, 122, 255, 255, 255, 255, 255, 239,   0,   0,   0, 243,
                0,   0,  90, 255, 255, 255, 255, 255, 196,   0,   0,  19, 255,
                0,   0, 173, 255, 255, 255, 255, 255, 154,   0,   0,  10, 255,
                0,   0,   0, 238, 255, 255, 255, 255,  57,   0,   0, 159, 255,
                6,   0,   0, 206, 255, 255, 255, 255,  89,   0,   0,  75, 255,
                2,   0,   0, 154, 255, 255, 255, 254, 136,   0,   0, 170, 255,
              126,   0,   0, 121, 255, 255, 255, 222,   0,   0,  42, 251, 255,
               91,   0,   0,  93, 255, 255, 255, 175,   0,   0,  27, 255, 255,
              174,   0,   0,   0, 255, 255, 255, 142,   0,   0,  16, 255, 255,
              254,   0,   0,   0, 212, 255, 255,  49,   0,   0, 129, 255, 255,
              255,  13,   0,   0, 181, 255, 255,  93,   0,   0, 104, 255, 255,
              255, 178,   0,   0, 151, 255, 255,   0,   0,   0, 215, 255, 255,
              255, 123,   0,   0,  53, 255, 188,   0,   0,  57, 255, 255, 255,
              255, 128,   0,   0,  42, 255, 134,   0,   0,  30, 255, 255, 255,
              255, 196,   0,   0,   0,   0,   0,   0,   0, 169, 255, 255, 255,
              255, 255,  41,   0,   0,   0,   0,   0,   0, 121, 255, 255, 255,
              255, 255,  16,   0,   0,   0,   0,   0,   0, 156, 255, 255, 255,
              255, 255, 163,   0,   0,   0,   0,   0,   0, 227, 255, 255, 255,
              255, 255, 118,   0,   0,   0,   0,   0,  69, 255, 255, 255, 255,
              255, 255, 145,   0,   0,   0,   0,   0,  27, 255, 255, 255, 255,
              255, 255, 232,   0,   0,   0,   0,   0, 147, 255, 255, 255, 255,
              255, 255, 255,  41,   0,   0,   0,   0, 143, 255, 255, 255, 255,
              255, 255, 255,  32,   0,   0,   0,   0, 187, 255, 255, 255, 255,
              255, 255, 255, 156,   0,   0,   0,   0, 236, 255, 255, 255, 255,
              255, 255, 255, 123,   0,   0,   0,  67, 255, 255, 255, 255, 255,
              255, 255, 255, 165,   0,   0,   0,  26, 255, 255, 255, 255, 255,
              255, 255, 255, 255,   0,   0,   0, 145, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  92,  38,  46, 249, 255, 255, 255, 255, 255
            };                      //V
            float[] W = new float[]
            {   
                254,  38,  37, 254, 255, 255, 255, 255, 255, 255,  34,  40, 252,
                177,   0,   0, 130, 255, 255, 255, 255, 255, 154,   0,   0, 134,
                177,   0,   0, 128, 255, 255, 255, 255, 254, 150,   0,   0, 130,
                178,   0,   0, 126, 255, 255, 255, 255, 255, 149,   0,   0, 133,
                175,   0,   0, 125, 255, 255, 255, 255, 255, 157,   0,   0, 134,
                167,   0,   0, 125, 255, 255, 255, 255, 255, 154,   0,   0, 130,
                174,   0,   0, 125, 255, 255, 255, 255, 255, 144,   0,   0, 133,
                177,   0,   0, 125, 255, 255, 255, 255, 255, 149,   0,   0, 132,
                176,   0,   0, 126, 255, 255, 196, 255, 255, 152,   0,   0, 130,
                176,   0,   0, 126, 255, 253,   0, 244, 255, 146,   0,   0, 135,
                177,   0,   0, 125, 255, 218,   0, 170, 255, 149,   0,   0, 132,
                175,   0,   0, 125, 255,  71,   0,  87, 255, 144,   0,   0, 131,
                178,   0,   0, 126, 255, 179,   0,   0, 255, 150,   0,   0, 139,
                175,   0,   0, 125, 255,   0,   0,   0, 246, 145,   0,   0, 131,
                177,   0,   0, 129, 146,   0,   0,   0, 112, 148,   0,   0, 131,
                178,   0,   0, 129, 160,   0,   0,   0,  94, 153,   0,   0, 137,
                175,   0,   0,  79,  15,   0,   0,   0,   0,  64,   0,   0, 132,
                178,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 140,
                175,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 131,
                177,   0,   0,   0,   0,   0, 226,  22,   0,   0,   0,   0, 130,
                178,   0,   0,   0,   0,  12, 255,   7,   0,   0,   0,   0, 135,
                173,   0,   0,   0,   0, 123, 255,  82,   0,   0,   0,   0, 132,
                168,   0,   0,   0,   0, 162, 255, 221,   0,   0,   0,   0, 131,
                175,   0,   0,   0,   0, 255, 255, 255,   0,   0,   0,   0, 133,
                178,   0,   0,   0, 128, 255, 255, 255,  83,   0,   0,   0, 130,
                175,   0,   0,   0, 126, 255, 255, 255, 157,   0,   0,   0, 132,
                178,   0,   0,   0, 211, 255, 255, 255, 225,  32,   0,   0, 136,
                170,   0,   0,  41, 255, 255, 255, 255, 255,  55,   0,   0, 130,
                175,   0,   0,  28, 255, 255, 255, 255, 255, 162,   0,   0, 135,
                253,  33,  38, 220, 255, 255, 255, 255, 255, 246,  38,  40, 247
            };                      //W
            float[] X = new float[]
            {   248,  38,  40, 254, 255, 255, 255, 255, 255, 240,  40,  48, 254,
                90,   0,   0, 146, 255, 255, 255, 255, 255,  90,   0,   0, 231,
               237,   0,   0, 109, 255, 255, 255, 255, 255,   0,   0, 135, 253,
               254,  93,   0,   0, 255, 255, 255, 255, 168,   0,   0,  36, 255,
               255, 113,   0,   0, 138, 255, 255, 255, 118,   0,   0, 189, 255,
               255, 204,   0,   0, 154, 255, 255, 255,   4,   0,   9, 251, 255,
               255, 255,  86,   0,   7, 255, 255, 189,   0,   0,  59, 255, 255,
               255, 255, 145,   0,   0, 161, 255, 130,   0,   0, 159, 255, 255,
               255, 255, 176,   0,   0,  43, 255,  50,   0,  30, 253, 255, 255,
               255, 255, 255,  32,   0,   0,   0,   0,   0, 155, 255, 255, 255,
               255, 255, 255, 154,   0,   0,   0,   0,   0, 128, 255, 255, 255,
               255, 255, 255, 139,   0,   0,   0,   0,   0, 255, 255, 255, 255,
               255, 255, 255, 255,   0,   0,   0,   0, 175, 255, 255, 255, 255,
               255, 255, 255, 255, 152,   0,   0,   0, 113, 255, 255, 255, 255,
               255, 255, 255, 255, 126,   0,   0,   0, 249, 255, 255, 255, 255,
               255, 255, 255, 255, 102,   0,   0,   0, 248, 255, 255, 255, 255,
               255, 255, 255, 255, 178,   0,   0,   0,  94, 255, 255, 255, 255,
               255, 255, 255, 255,   0,   0,   0,   0, 182, 255, 255, 255, 255,
               255, 255, 255, 126,   0,   0,   0,   0,   0, 251, 255, 255, 255,
               255, 255, 255, 173,   0,   0,   0,   0,   0, 116, 255, 255, 255,
               255, 255, 255,  35,   0,   0,   0,   0,   0,  13, 255, 255, 255,
               255, 255, 162,   0,   0, 136, 252,  30,   0,   0, 246, 255, 255,
               255, 255, 152,   0,   0, 188, 255, 131,   0,   0, 148, 255, 255,
               255, 255,  26,   0,   5, 255, 255, 202,   0,   0,  27, 255, 255,
               255, 193,   0,   0, 110, 255, 255, 255,   3,   0,   8, 244, 255,
               255,  52,   0,   0, 182, 255, 255, 255,  99,   0,   0, 185, 255,
               254,   0,   0,   0, 255, 255, 255, 255, 217,   0,   0,  38, 255,
               235,   0,   0,  90, 255, 255, 255, 255, 255,   0,   0,  61, 251,
                82,   0,   0, 162, 255, 255, 255, 255, 255,  78,   0,   0, 234,
               249, 225, 216, 255, 255, 255, 255, 255, 255, 252, 181, 196, 255
            };                      //X
            float[] Y = new float[]
            {   84,  99, 254, 255, 255, 255, 255, 255, 255, 215,  82, 100, 255,
                0,   0, 148, 255, 255, 255, 255, 255, 248, 113,   0,   0, 247,
                0,   0,  86, 255, 255, 255, 255, 255, 193,   0,   0,  16, 255,
                0,   0,   0, 245, 255, 255, 255, 255, 132,   0,   0, 171, 255,
                3,   0,   0, 183, 255, 255, 255, 255, 114,   0,   0, 116, 255,
               97,   0,   0, 112, 255, 255, 255, 213,   0,   0,  39, 255, 255,
              164,   0,   0, 110, 255, 255, 255, 144,   0,   0,  14, 255, 255,
              255,  19,   0,   0, 198, 255, 255,  62,   0,   0,  97, 255, 255,
              255, 162,   0,   0, 144, 255, 250,   0,   0,   0, 235, 255, 255,
              255, 118,   0,   0,  85, 255, 153,   0,   0,  28, 255, 255, 255,
              255, 255,   4,   0,   0,   0,   0,   0,   0, 129, 255, 255, 255,
              255, 255,  68,   0,   0,   0,   0,   0,   0, 184, 255, 255, 255,
              255, 255, 118,   0,   0,   0,   0,   0,  66, 255, 255, 255, 255,
              255, 255, 201,   0,   0,   0,   0,   0, 115, 255, 255, 255, 255,
              255, 255, 255,  26,   0,   0,   0,   0, 143, 255, 255, 255, 255,
              255, 255, 255, 151,   0,   0,   0,   8, 243, 255, 255, 255, 255,
              255, 255, 255, 150,   0,   0,   0,  27, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  68,   0,   0, 160, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  41,   0,   0, 164, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  41,   0,   0, 163, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  41,   0,   0, 163, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  41,   0,   0, 163, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  38,   0,   0, 163, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  41,   0,   0, 163, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  41,   0,   0, 163, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  36,   0,   0, 163, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  41,   0,   0, 163, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  38,   0,   0, 163, 255, 255, 255, 255, 255,
              255, 255, 255, 255,  41,   0,   0, 163, 255, 255, 255, 255, 255,
              255, 255, 255, 255, 215,  95, 122, 255, 255, 255, 255, 255, 255
            };                      //Y
            float[] Z = new float[]
            {   255,  68, 131, 137, 139, 136, 133, 140, 139, 125, 134, 135, 192,
                255,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  89,
                255, 134,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  86,
                255, 255, 255, 255, 255, 255, 255, 255, 255, 136,   0,   0, 111,
                255, 255, 255, 255, 255, 255, 255, 255, 255,  57,   0,   0, 240,
                255, 255, 255, 255, 255, 255, 255, 255, 255,   0,   0,  64, 255,
                255, 255, 255, 255, 255, 255, 255, 255,  85,   0,   0, 169, 255,
                255, 255, 255, 255, 255, 255, 255, 255,   5,   0,  86, 255, 255,
                255, 255, 255, 255, 255, 255, 255, 128,   0,   0, 158, 255, 255,
                255, 255, 255, 255, 255, 255, 255, 132,   0,   0, 207, 255, 255,
                255, 255, 255, 255, 255, 255, 242,   0,   0,  16, 255, 255, 255,
                255, 255, 255, 255, 255, 255, 149,   0,   0,  97, 255, 255, 255,
                255, 255, 255, 255, 255, 255,  79,   0,   0, 255, 255, 255, 255,
                255, 255, 255, 255, 255, 200,   0,   0, 117, 255, 255, 255, 255,
                255, 255, 255, 255, 255,  42,   0,   0, 207, 255, 255, 255, 255,
                255, 255, 255, 255, 252,   0,   0,  11, 254, 255, 255, 255, 255,
                255, 255, 255, 255, 146,   0,   0, 110, 255, 255, 255, 255, 255,
                255, 255, 255, 255, 123,   0,   0, 217, 255, 255, 255, 255, 255,
                255, 255, 255, 250,   0,   0,  49, 255, 255, 255, 255, 255, 255,
                255, 255, 255, 100,   0,   0, 143, 255, 255, 255, 255, 255, 255,
                255, 255, 255,  26,   0,  40, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 160,   0,   0, 169, 255, 255, 255, 255, 255, 255, 255,
                255, 255, 140,   0,   0, 197, 255, 255, 255, 255, 255, 255, 255,
                255, 252,   0,   0,  27, 255, 255, 255, 255, 255, 255, 255, 255,
                255, 153,   0,   0,  64, 255, 255, 255, 255, 255, 255, 255, 255,
                255,  93,   0,   0, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                234,   0,   0,   0, 255, 255, 255, 255, 255, 255, 255, 255, 255,
                183,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  37,
                182,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,
                253,  95, 115, 113, 112, 115, 122, 124, 125, 122, 119, 114,  40
            };                       //Z
            
            
        entradas.add(uno);
        entradas.add(dos);
        entradas.add(tres);
        entradas.add(cuatro);
        entradas.add(cinco);
        entradas.add(seis);
        entradas.add(siete);
        entradas.add(ocho);
        entradas.add(nueve);
        entradas.add(A);
        entradas.add(B);
        entradas.add(C);
        entradas.add(D);
        entradas.add(E);
        entradas.add(F);
        entradas.add(G);
        entradas.add(H);
        entradas.add(J);
        entradas.add(K);
        entradas.add(L);
        entradas.add(M);
        entradas.add(N);
        entradas.add(P);
        entradas.add(R);
        entradas.add(S);
        entradas.add(T);
        entradas.add(U);
        entradas.add(V);
        entradas.add(W);
        entradas.add(X);
        entradas.add(Y);
        entradas.add(Z);
        
        
        
        
                    
        
        float[][] objetivos = {
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //0
            {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //1
            {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //2
            {0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //3
            {0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //4
            {0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //5
            {0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //6
            {0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //7
            {0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //8
            {0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //9
            {0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //A
            {0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //B
            {0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //C
            {0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //D
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //E
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //F
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //G
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //H
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //J
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0},                          //K
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},                          //L
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},                          //M
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0},                          //N
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0},                          //P
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},                          //R
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0},                          //S
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},                          //T
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},                          //U
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},                          //V
            {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},                          //W
            {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0},                          //X
            {0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},                          //Y
            {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}                           //Z
        };
        //System.out.prfloatln(entradas.get(10));
        //I.setEntradas(entradas);
        //I.setObjetivos(objetivos);
        //I.inicializar();
    }
    
}
